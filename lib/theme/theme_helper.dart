import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA70001,
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.tealA400,
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(21.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(30.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      radioTheme: RadioThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return colorScheme.primary;
          }
          return colorScheme.onSurface;
        }),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.black900.withOpacity(0.24),
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyMedium: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 15.fSize,
          fontFamily: 'Inder',
          fontWeight: FontWeight.w400,
        ),
        labelLarge: TextStyle(
          color: colorScheme.errorContainer,
          fontSize: 13.fSize,
          fontFamily: 'Montserrat',
          fontWeight: FontWeight.w500,
        ),
        labelMedium: TextStyle(
          color: appTheme.blue600,
          fontSize: 10.fSize,
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w600,
        ),
        titleLarge: TextStyle(
          color: colorScheme.secondaryContainer,
          fontSize: 20.fSize,
          fontFamily: 'Montserrat',
          fontWeight: FontWeight.w500,
        ),
        titleMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 16.fSize,
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w600,
        ),
        titleSmall: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 15.fSize,
          fontFamily: 'Montserrat',
          fontWeight: FontWeight.w700,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF3DC6E5),
    primaryContainer: Color(0XFF2E2E2E),
    secondaryContainer: Color(0XFF4ECB71),

    // Error colors
    errorContainer: Color(0XFF676767),
    onErrorContainer: Color(0XFF000DA4),

    // On colors(text colors)
    onPrimary: Color(0XFF1B1B1B),
    onPrimaryContainer: Color(0XFFFCFCFC),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber400 => Color(0XFFF0C419);

  // Black
  Color get black900 => Color(0XFF000000);

  // White
  Color get white900 => Color(0XFFFFFFFF);

  // Blue
  Color get blue200 => Color(0XFF94C5E6);
  Color get blue600 => Color(0XFF1A88EB);
  Color get blue900 => Color(0XFF0D47A1);

  // BlueGray
  Color get blueGray100 => Color(0XFFCFCFCF);
  Color get blueGray400 => Color(0XFF8E8E8E);
  Color get blueGray40001 => Color(0XFF898989);
  Color get blueGray50 => Color(0XFFF1F1F1);

  // Cyan
  Color get cyan400 => Color(0XFF34D5C4);
  Color get cyan5005 => Color(0X05D9FFF5);

  // DeepPurple
  Color get deepPurple50 => Color(0XFFF0E8FD);
  Color get deepPurpleA400 => Color(0XFF6E16FF);

  // Gray
  Color get gray100 => Color(0XFFF5F5F5);
  Color get gray200 => Color(0XFFEBEBEB);
  Color get gray20001 => Color(0XFFF0EBEB);
  Color get gray400 => Color(0XFFB0B0B0);
  Color get gray40001 => Color(0XFFBABABA);
  Color get gray40002 => Color(0XFFB4B4B4);
  Color get gray40003 => Color(0XFFAEAEAE);
  Color get gray500 => Color(0XFF989898);
  Color get gray50001 => Color(0XFF999999);
  Color get gray600 => Color(0XFF808080);
  Color get gray60001 => Color(0XFF737373);
  Color get gray60002 => Color(0XFF818181);
  Color get gray700 => Color(0XFF616161);
  Color get gray800 => Color(0XFF4D4D4D);
  Color get gray80001 => Color(0XFF3B3B3B);
  Color get gray900 => Color(0XFF282828);
  Color get gray90001 => Color(0XFF232323);
  Color get gray90002 => Color(0XFF171717);
  Color get gray30002 => Color(0XFFDBDBDB);
  Color get gray300 => Color(0XFFDBE6E9);
  // Green
  Color get green400 => Color(0XFF70D765);
  Color get green500 => Color(0XFF3EDC60);
  Color get red500 => Color(0XFFDE3D3D);
  Color get green40001 => Color(0XFF4ECB71);

  // Indigo
  Color get indigoA700 => Color(0XFF3140EE);
  Color get indigoA70001 => Color(0XFF3342F0);
  Color get indigoA70002 => Color(0XFF3241EF);

  // LightBlue
  Color get lightBlue900 => Color(0XFF074E8E);

  // Orange
  Color get orangeA200 => Color(0XFFFFA244);

  // Purple
  Color get purple500 => Color(0XFF9F2D92);
  Color get purpleA200 => Color(0XFFBC31EE);

  // Red
  Color get red200 => Color(0XFFFF9D9D);
  Color get redA400 => Color(0XFFFF1842);

  // Teal
  Color get tealA100 => Color(0XFFABFFEF);
  Color get tealA400 => Color(0XFF24E1CA);

  // White
  Color get whiteA700 => Color(0XFFFFFEFE);
  Color get whiteA70001 => Color(0XFFFFFFFF);

  // Yellow
  Color get yellow600 => Color(0XFFE9D52F);
  Color get yellowA700 => Color(0XFFFFD600);

  // Yellow
  //Color get yellow600 => Color(0XFFE9D52F);
  Color get yellow700 => Color(0XFFFCB935);
  Color get yellow900 => Color(0XFFF79219);
  Color get yellow90001 => Color(0XFFF47921);
  Color get yellow90002 => Color(0XFFFF8730);
  //Color get yellowA700 => Color(0XFFFFD600);

  // Indigo
  Color get indigoA100 => Color(0XFF8787F7);
  Color get gray70002 => Color(0XFF616161);
  Color get gray70001 => Color(0XFF545454);
  Color get gray50002 => Color(0XFF989898);
  Color get red900 => Color(0XFF812206);
  // DeepOrange
  Color get deepOrange50 => Color(0XFFFDDDDD);
  Color get deepOrangeA100 => Color(0XFFFFA386);
  Color get gray30001 => Color(0XFFDADADA);

}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
